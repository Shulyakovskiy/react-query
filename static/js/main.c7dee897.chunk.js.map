{"version":3,"sources":["routes.ts","utils/api.ts","utils/reactQuery.ts","api/auth.ts","pages/Auth.tsx","utils/router.ts","api/appointments.ts","components/CarDetails/CarDetails.tsx","api/jobs.ts","utils/notifications.ts","components/Jobs/Jobs.tsx","components/History/History.tsx","components/ServicesList/ServicesCheck.tsx","api/services.ts","components/ServicesList/ServicesList.tsx","pages/Appointment.tsx","components/UserItem/UserItem.tsx","components/UserItem/UserItemSkeleton.tsx","components/UsersList/UsersList.tsx","components/UsersSummary/UsersSummary.tsx","pages/Appointments.tsx","components/UserProfile/UserProfile.tsx","App.tsx","fixtures/appointments.ts","fixtures/services.ts","utils/mockApi.ts","index.tsx"],"names":["apiRoutes","pageRoutes","api","url","params","axios","get","headers","token","Cookies","data","post","patch","delete","fetcher","queryKey","pageParam","then","res","useFetch","config","useQuery","enabled","useGenericMutation","func","updater","queryClient","useQueryClient","useMutation","onMutate","a","cancelQueries","previousData","getQueryData","setQueryData","oldData","onError","err","_","context","onSettled","invalidateQueries","getTokenByPassword","email","password","useGetProfile","undefined","retry","user","Auth","history","useHistory","useState","btnLoading","setBtnLoading","setEmail","setPassword","useEffect","replace","onSubmit","event","preventDefault","resp","set","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","Box","display","flexDirection","alignItems","width","margin","mb","Typography","variant","component","noValidate","autoComplete","style","TextField","fullWidth","id","label","type","name","value","onChange","e","target","Alert","severity","Button","color","size","disabled","pathToUrl","path","compile","useGetAppointmentsList","useInfiniteQuery","getPreviousPageParam","firstPage","previousId","getNextPageParam","lastPage","nextId","useGetAppointment","usePatchAppointment","usePrefetchCarDetails","prefetchQuery","usePrefetch","CarDetails","staleTime","useGetCarDetail","isLoading","CircularProgress","mt","model","number","useAddJob","usePost","useDeleteJob","useDelete","pushNotification","msg","Jobs","appointmentId","jobName","setJobName","mutationAdd","newData","mutationDelete","filter","item","onAdd","mutateAsync","onDelete","Skeleton","animation","height","map","idx","ml","Fab","onClick","inputProps","sx","top","left","zIndex","History","isFetching","mutation","pt","date","comment","length","mutate","ServicesCheck","checked","suspense","setValue","FormGroup","FormControlLabel","control","Checkbox","includes","isChecked","prevValue","handleChange","String","ServicesList","FormControl","FormLabel","reset","fallbackRender","resetErrorBoundary","AlertTitle","message","onReset","Suspense","fallback","Appointment","prefetched","useRef","useParams","useGetInsurance","hasInsurance","insurance","showAdditional","setShowAdditional","prefetchCarDetails","Card","p","allCovered","services","onMouseEnter","current","UserItem","ListItem","ListItemAvatar","Avatar","ListItemText","primary","upperFirst","secondary","format","Date","ListItemSecondaryAction","to","IconButton","edge","UserItemSkeleton","UsersList","list","fetchNextPage","hasNextPage","isFetchingNextPage","List","pages","page","Fragment","appointment_date","UsersSummary","count","Appointments","UserProfile","justifyContent","App","AppBar","Toolbar","m","exact","appointments","address","vehicle","carDetailsMock","jobsMocks","ADMIN_TOKEN","PROFILES","profile","getUser","find","exclude","interceptors","response","use","pattern","test","console","groupCollapsed","method","toUpperCase","dir","JSON","parse","stringify","groupEnd","mock","MockAdapter","delayResponse","onGet","reply","slice","onPost","pathToRegexp","result","match","decode","decodeURIComponent","onPatch","body","findIndex","Math","round","random","floor","push","splice","initializeMockAdapter","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"oVAAaA,EACS,0BADTA,EAEC,kBAFDA,EAGE,mBAHFA,EAIE,uBAJFA,EAKE,mBALFA,EAMG,wBANHA,EAOG,wBAPHA,EAQN,gBAGMC,EACL,IADKA,EAEL,QAFKA,EAGE,mB,kCCXFC,EACN,SAAIC,EAAaC,GAAjB,OACHC,IAAMC,IAAOH,EAAb,aACEI,QAAS,CACPC,MAAOC,IAAQH,IAAI,WAElBF,KANIF,EAQL,SAAIC,EAAaO,GAAjB,OACJL,IAAMM,KAAQR,EAAKO,EAAM,CACvBH,QAAS,CACPC,MAAOC,IAAQH,IAAI,aAXdJ,EAcJ,SAAIC,EAAaO,GAAjB,OACLL,IAAMO,MAAST,EAAKO,EAAM,CACxBH,QAAS,CACPC,MAAOC,IAAQH,IAAI,aAjBdJ,EAoBH,SAAIC,GAAJ,OACNE,IAAMQ,OAAUV,EAAK,CACnBI,QAAS,CACPC,MAAOC,IAAQH,IAAI,a,QCZdQ,EAAU,YAG6B,IAFlDC,EAEiD,EAFjDA,SACAC,EACiD,EADjDA,UAEA,cAAsBD,EAAtB,GAAOZ,EAAP,KAAYC,EAAZ,KACA,OAAOF,EACGC,EAAK,CAAEC,OAAO,2BAAMA,GAAP,IAAeY,gBACnCC,MAAK,SAACC,GAAD,OAASA,EAAIR,SAsCVS,EAAW,SACtBhB,EACAC,EACAgB,GAWA,OATgBC,mBACd,CAAClB,EAAMC,IACP,gBAAGW,EAAH,EAAGA,SAAH,OAAkBD,EAAQ,CAAEC,eAFN,aAIpBO,UAAWnB,GACRiB,KAOHG,EAAqB,SACzBC,EACArB,EACAC,EACAqB,GAEA,IAAMC,EAAcC,2BAEpB,OAAOC,sBAA8CJ,EAAM,CACzDK,SAAS,WAAD,4BAAE,WAAOnB,GAAP,eAAAoB,EAAA,sEACFJ,EAAYK,cAAc,CAAC5B,EAAMC,IAD/B,cAGF4B,EAAeN,EAAYO,aAAa,CAAC9B,EAAMC,IAErDsB,EAAYQ,aAAgB,CAAC/B,EAAMC,IAAS,SAAC+B,GAC3C,OAAOV,EAAUA,EAAQU,EAAUzB,GAAcA,KAN3C,kBASDsB,GATC,2CAAF,mDAAC,GAWTI,QAAS,SAACC,EAAKC,EAAGC,GAChBb,EAAYQ,aAAa,CAAC/B,EAAMC,GAASmC,IAE3CC,UAAW,WACTd,EAAYe,kBAAkB,CAACtC,EAAMC,QC/F9BsC,EAAqB,SAACC,EAAeC,GAAhB,OAChC1C,EAA4BF,EAA8B,CACxD2C,QACAC,cAGSC,EAAgB,WAAO,IAAD,EAC3BN,EAAUpB,EACdnB,OACA8C,EACA,CAAEC,OAAO,IAEX,OAAO,2BAAKR,GAAZ,IAAqB7B,KAAI,UAAE6B,EAAQ7B,YAAV,aAAE,EAAcsC,Q,eCmH5BC,EA3HF,WACX,IAAMC,EAAUC,cACVzB,EAAcC,2BAEpB,EAAoCyB,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOT,EAAP,KAAcY,EAAd,KACA,EAAgCH,mBAAS,IAAzC,mBAAOR,EAAP,KAAiBY,EAAjB,KAEAC,qBAAU,WACJhD,IAAQH,IAAI,UACd4C,EAAQQ,QAAQzD,KAEjB,IAEH,IAAM0D,EAAQ,uCAAG,WAAOC,GAAP,eAAA9B,EAAA,6DACf8B,EAAMC,iBACNP,GAAc,GAFC,kBAIMZ,EAAmBC,EAAOC,GAJhC,QAIPkB,EAJO,QAKJpD,KAAKF,OACZC,IAAQsD,IAAI,QAASD,EAAKpD,KAAKF,OAC/B0C,EAAQQ,QAAQzD,GAChByB,EAAYe,qBAEZuB,IAAMC,MAAM,kBAAmB,CAC7BC,SAAU,cACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU1B,IAjBD,gDAqBbkB,IAAMC,MAAM,kBAAmB,CAC7BC,SAAU,cACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU1B,IA5BC,yBA+BbQ,GAAc,GA/BD,4EAAH,sDAmCd,OACE,eAACmB,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,SACdC,WAAW,SACXC,MAAM,QACNC,OAAO,iBALT,UAOE,cAACL,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CAAYN,QAAQ,QAAQO,QAAQ,KAAKC,UAAU,KAAnD,uBAKF,uBACEC,YAAU,EACVC,aAAa,MACbC,MAAO,CAAER,MAAO,QAChBlB,SAAUA,EAJZ,UAME,cAACc,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACO,EAAA,EAAD,CACEC,WAAS,EACTH,aAAa,MACbI,GAAG,iBACHC,MAAM,QACNR,QAAQ,WACRS,KAAK,QACLC,KAAK,QACLC,MAAOjD,EACPkD,SAAU,SAACC,GACTvC,EAASuC,EAAEC,OAAOH,YAKxB,cAACnB,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACO,EAAA,EAAD,CACEC,WAAS,EACTH,aAAa,MACbI,GAAG,iBACHC,MAAM,WACNR,QAAQ,WACRS,KAAK,WACLC,KAAK,WACLC,MAAOhD,EACPiD,SAAU,SAACC,GACTtC,EAAYsC,EAAEC,OAAOH,YAK3B,cAACnB,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACiB,EAAA,EAAD,CAAOC,SAAS,OAAhB,iIAMF,cAACC,EAAA,EAAD,CACER,KAAK,SACLT,QAAQ,YACRkB,MAAM,UACNC,KAAK,QACLC,SAAUhD,EACVkC,WAAS,EANX,2B,mCCnHKe,EAAY,SAACC,GAAD,IAAenG,EAAf,uDAAgC,GAAhC,OACvBoG,YAAQD,EAARC,CAAcpG,ICWHqG,EAAyB,kBJUPtG,EITOH,EJUpB0G,2BAMd,CAACvG,EAAMC,IACP,gBAAGW,EAAH,EAAGA,SAAH,IAAaC,UAAb,OAAiCF,EAAQ,CAAEC,WAAUC,eAArD,MAAyB,EAAzB,MACA,CACE2F,qBAAsB,SAACC,GAAD,uBAAeA,EAAUC,kBAAzB,UACtBC,iBAAkB,SAACC,GAAc,IAAD,EAC9B,iBAAOA,EAASC,cAAhB,YAZmB,IAAI7G,EAAoBC,GIPtC6G,EAAoB,SAACzB,GAAD,OAC/BrE,EAA+BmF,EAAUtG,EAAuB,CAAEwF,SAEvD0B,GAAsB,SAAC1B,GAAD,OJgHjCrF,EI9GEmG,EAAUtG,EAAuB,CAAEwF,OJkH9BjE,GACL,SAACb,GAAD,OAAUR,EAAaC,EAAKO,KAC5BP,EACAC,EACAqB,GATqB,IACvBtB,EACAC,EACAqB,GIjGW0F,GAAwB,SAAC3B,GAAD,OJOV,SAAIrF,EAAoBC,GACjD,IAAMsB,EAAcC,2BAEpB,OAAO,WACAxB,GAILuB,EAAY0F,cACV,CAACjH,EAAMC,IACP,gBAAGW,EAAH,EAAGA,SAAH,OAAkBD,EAAQ,CAAEC,iBIhBhCsG,CACE7B,EAAKc,EAAUtG,EAAwB,CAAEwF,OAAQ,O,+BCPtC8B,GAxBI,SAAC,GAAmB,IACrC,EDgB6B,SAAC9B,GAAD,OAC7BrE,EACEmF,EAAUtG,EAAwB,CAAEwF,YACpC1C,EACA,CAAEyE,UAAW,MCpBaC,CADQ,EAAhBhC,IACZ9E,EAAR,EAAQA,KAER,OAFA,EAAc+G,UAGL,cAACC,GAAA,EAAD,IAGJhH,EAKH,eAAC+D,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CAAKkD,GAAI,EAAT,SACE,eAAC3C,EAAA,EAAD,qBAAoBtE,EAAKkH,WAG3B,cAACnD,EAAA,EAAD,CAAKkD,GAAI,EAAT,SACE,eAAC3C,EAAA,EAAD,sBAAqBtE,EAAKmH,eAVvB,kD,6DCREC,GAAY,SACvBrG,GADuB,ON8GF,SACrBtB,EACAC,EACAqB,GAEA,OAAOF,GACL,SAACb,GAAD,OAAUR,EAAYC,EAAKO,KAC3BP,EACAC,EACAqB,GMpHFsG,CACEzB,EAAUtG,QACV8C,EACArB,IAGSuG,GAAe,SAC1BvG,GAD0B,ONwFH,SACvBtB,EACAC,EACAqB,GAEA,OAAOF,GACL,SAACiE,GAAD,OAAQtF,EAAA,UAAcC,EAAd,YAAqBqF,MAC7BrF,EACAC,EACAqB,GM5FCwG,CAA0B3B,EAAUtG,QAAgB8C,EAAWrB,I,UCpBvDyG,GAAmB,SAACC,GAC/BnE,IAAMC,MAAMkE,EAAK,CACfjE,SAAU,cACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU1B,KCkHCsF,GA/GF,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,cACd,EAA8BjF,mBAAS,IAAvC,mBAAOkF,EAAP,KAAgBC,EAAhB,KAEA,EFVApH,EAAyBmF,EAAUtG,IEU3BU,EAAR,EAAQA,KAAM+G,EAAd,EAAcA,UAERe,EAAcV,IAAU,SAAC3F,EAASsG,GAAV,6BAA0BtG,GAA1B,CAAmCsG,OAC3DC,EAAiBV,IAAa,SAAC7F,EAASqD,GAAV,OAClCrD,EAAQwG,QAAO,SAACC,GAAD,OAAUA,EAAKpD,KAAOA,QAGjCqD,EAAK,uCAAG,sBAAA/G,EAAA,+EAEJ0G,EAAYM,YAAY,CAC5BnD,KAAM2C,EACND,kBAJQ,OAMVE,EAAW,IAND,+CAQVL,GAAiB,uBAAD,OAAwBI,IAR9B,wDAAH,qDAYLS,EAAQ,uCAAG,WAAOvD,GAAP,SAAA1D,EAAA,+EAEP4G,EAAeI,YAAYtD,GAFpB,sDAIb0C,GAAiB,yBAJJ,wDAAH,sDAQd,OAAIT,EAEA,eAAChD,EAAA,EAAD,CAAKkD,GAAI,EAAG,cAAY,mBAAxB,UACE,cAAClD,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACiE,GAAA,EAAD,CAAUC,UAAU,OAAOhE,QAAQ,cAAciE,OAAQ,OAE3D,cAACzE,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACiE,GAAA,EAAD,CAAUC,UAAU,OAAOhE,QAAQ,cAAciE,OAAQ,UAM5DxI,EAKH,eAAC+D,EAAA,EAAD,WACG/D,EAAKyI,KAAI,SAACP,EAAMQ,GAAP,OACR,eAAC3E,EAAA,EAAD,CAA0BC,QAAQ,OAAOE,WAAW,SAAS+C,GAAI,EAAjE,UACE,cAAClD,EAAA,EAAD,CAAKI,MAAM,OAAX,SACE,cAACG,EAAA,EAAD,UAAa4D,EAAKjD,SAEpB,cAAClB,EAAA,EAAD,CAAK4E,GAAI,EAAT,SACE,cAACC,GAAA,EAAD,CACEnD,MAAM,UACN,aAAW,SACXC,KAAK,QACLmD,QAAS,WACPR,EAASH,EAAKpD,KAEhB,+BAAuBoD,EAAKpD,IAP9B,SASE,cAAC,KAAD,UAdIoD,EAAKpD,IAAM4D,MAmBvB,eAAC3E,EAAA,EAAD,CAAKC,QAAQ,OAAOE,WAAW,SAAS+C,GAAI,EAA5C,UACE,cAACrC,EAAA,EAAD,CACEG,MAAM,WACNR,QAAQ,WACRW,MAAO0C,EACPzC,SAAU,SAACC,GAAD,OAAOyC,EAAWzC,EAAEC,OAAOH,QACrCL,WAAS,EACTc,SAAUmC,EAAYf,UACtB+B,WAAY,CACV,cAAe,WAGnB,eAAC/E,EAAA,EAAD,CAAK4E,GAAI,EAAGnF,SAAS,WAArB,UACE,cAACoF,GAAA,EAAD,CACEnD,MAAM,UACN,aAAW,MACXoD,QAAS,WACPV,KAEFzC,KAAK,QACLC,SAAUmC,EAAYf,YAAca,EACpC,cAAY,MARd,SAUE,cAAC,KAAD,MAEDE,EAAYf,WACX,cAACC,GAAA,EAAD,CACEtB,KAAM,GACNqD,GAAI,CACFvF,SAAU,WACVwF,KAAM,EACNC,MAAO,EACPC,OAAQ,cAzDb,MCKIC,GArDC,SAAC,GAAmB,IAAjBrE,EAAgB,EAAhBA,GACjB,EAA6ByB,GAAmBzB,GAAxC9E,EAAR,EAAQA,KAAMoJ,EAAd,EAAcA,WACRC,EAAW7C,IAAqB1B,GAEtC,GAAIsE,EACF,OACE,eAACrF,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CAAKuF,GAAI,EAAT,SACE,cAAChB,GAAA,EAAD,CAAUC,UAAU,OAAOhE,QAAQ,cAAciE,OAAQ,OAE3D,cAACzE,EAAA,EAAD,CAAKuF,GAAI,EAAT,SACE,cAAChB,GAAA,EAAD,CAAUC,UAAU,OAAOhE,QAAQ,cAAciE,OAAQ,OAE3D,cAACzE,EAAA,EAAD,CAAKuF,GAAI,EAAT,SACE,cAAChB,GAAA,EAAD,CAAUC,UAAU,OAAOhE,QAAQ,cAAciE,OAAQ,UAUjE,OACE,4CACGxI,QADH,IACGA,OADH,EACGA,EAAMwC,QAAQiG,KAAI,SAACP,GAAD,OACjB,eAAC5D,EAAA,EAAD,CAAYC,QAAQ,QAApB,mBACS2D,EAAKqB,KADd,IACoB,uBADpB,YAEYrB,EAAKsB,UAFgBtB,EAAKqB,WAMvC,OAACvJ,QAAD,IAACA,OAAD,EAACA,EAAMwC,QAAQiH,UAAWL,GACzB,cAACrF,EAAA,EAAD,CAAKkD,GAAI,EAAT,SACE,mDAGJ,cAAClD,EAAA,EAAD,CAAKkD,GAAI,EAAT,SACE,cAACzB,EAAA,EAAD,CACEjB,QAAQ,WACRkB,MAAM,UACNC,KAAK,QACLmD,QAvBS,WACfQ,EAASK,OAAO1J,IAuBV2F,UAAW3F,GAAQqJ,EAAStC,UAL9B,wB,sECDO4C,GAtCO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASzE,EAAsB,EAAtBA,SACxBnF,ECLRS,EAA6BnB,OAAuB8C,EAAW,CAC7DyH,UAAU,EACVxH,MAAO,IDGDrC,KAER,EAA0B0C,mBAASkH,GAAnC,mBAAO1E,EAAP,KAAc4E,EAAd,KAEA/G,qBAAU,WACRoC,EAASD,KACR,CAACA,IAUJ,OACE,cAAC6E,GAAA,EAAD,UACG/J,EAAMyI,KAAI,SAACP,GAAD,OACT,cAAC8B,GAAA,EAAD,CAEEC,QACE,cAACC,GAAA,EAAD,CACEN,QAAS1E,EAAMiF,SAASjC,EAAKpD,IAC7BK,SAAU,SAACvD,EAAGwI,IAhBL,SAACtF,EAAYsF,GAE9BN,EADEM,EACO,SAACC,GAAD,6BAAmBA,GAAnB,CAA8BvF,KAE9B,SAACuF,GAAD,OAAeA,EAAUpC,QAAO,SAACC,GAAD,OAAUA,IAASpD,OAalDwF,CAAapC,EAAKpD,GAAIsF,IAExBnF,KAAMsF,OAAOrC,EAAKpD,MAGtBC,MAAOmD,EAAKjD,MAVPiD,EAAKpD,UE2CL0F,GAtDM,SAAC,GAAkC,IAAhCZ,EAA+B,EAA/BA,QAASzE,EAAsB,EAAtBA,SAC/B,OACE,eAACsF,GAAA,EAAD,CAAajG,UAAU,WAAWK,WAAS,EAA3C,UACE,cAAC6F,GAAA,EAAD,CAAWlG,UAAU,SAArB,sBAEA,cAAC,0BAAD,UACG,gBAAGmG,EAAH,EAAGA,MAAH,OACC,cAAC,iBAAD,CACEC,eAAgB,gBAAGrH,EAAH,EAAGA,MAAOsH,EAAV,EAAUA,mBAAV,OACd,eAAC9G,EAAA,EAAD,CAAKI,MAAM,OAAO8C,GAAI,EAAtB,UACE,eAAC3B,EAAA,EAAD,CAAOC,SAAS,QAAhB,UACE,cAACuF,GAAA,EAAD,UACE,8CAEDvH,EAAMwH,WAGT,cAAChH,EAAA,EAAD,CAAKkD,GAAI,EAAT,SACE,cAACzB,EAAA,EAAD,CACEjB,QAAQ,YACRkB,MAAM,QACNoD,QAAS,kBAAMgC,KAHjB,6BAUNG,QAASL,EArBX,SAuBE,cAAC,IAAMM,SAAP,CACEC,SACE,eAACnH,EAAA,EAAD,CAAKI,MAAM,OAAX,UACE,cAACJ,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACiE,GAAA,EAAD,CAAU/D,QAAQ,OAAOgE,UAAU,WAErC,cAACxE,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACiE,GAAA,EAAD,CAAU/D,QAAQ,OAAOgE,UAAU,WAErC,cAACxE,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACiE,GAAA,EAAD,CAAU/D,QAAQ,OAAOgE,UAAU,cAV3C,SAeE,cAAC,GAAD,CAAeqB,QAASA,EAASzE,SAAUA,eCqE1CgG,GAtHK,WAClB,IAAMC,EAAaC,mBACXvG,EAAOwG,cAAPxG,GACR,EAA4ByB,GAAmBzB,GAAvC9E,EAAR,EAAQA,KAAM+G,EAAd,EAAcA,UACd,ETa6B,SAACjC,GAAD,OAC7BrE,EACEqE,EAAKc,EAAUtG,EAAwB,CAAEwF,OAAQ,MSfvByG,EAAoB,OAAJvL,QAAI,IAAJA,OAAA,EAAAA,EAAMwL,eAAgB1G,EAAK,MAAzD2G,EAAd,EAAQzL,KACR,EAA4C0C,oBAAS,GAArD,mBAAOgJ,EAAP,KAAuBC,EAAvB,KACMC,EAAqBnF,IAAuB3B,GAElD,OAAIiC,EAEA,eAAChD,EAAA,EAAD,CAAK,cAAY,uBAAjB,UACE,cAACA,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACwH,EAAA,EAAD,UACE,cAACvD,GAAA,EAAD,CAAU/D,QAAQ,cAAciE,OAAQ,IAAKD,UAAU,aAI3D,cAACxE,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACwH,EAAA,EAAD,UACE,cAACvD,GAAA,EAAD,CAAU/D,QAAQ,cAAciE,OAAQ,IAAKD,UAAU,aAI3D,cAACxE,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACwH,EAAA,EAAD,UACE,cAACvD,GAAA,EAAD,CAAU/D,QAAQ,cAAciE,OAAQ,IAAKD,UAAU,aAI3D,cAACxE,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACwH,EAAA,EAAD,UACE,cAACvD,GAAA,EAAD,CAAU/D,QAAQ,cAAciE,OAAQ,IAAKD,UAAU,gBAO5DvI,EAKH,qCACE,cAAC6L,EAAA,EAAD,UACE,eAAC9H,EAAA,EAAD,CAAK+H,EAAG,EAAR,UACE,eAACxH,EAAA,EAAD,CAAYN,QAAQ,QAAQO,QAAQ,KAAKC,UAAU,KAAnD,UACGxE,EAAKiF,KADR,KACwB,OAATwG,QAAS,IAATA,OAAA,EAAAA,EAAWM,aAAc,cAAC,KAAD,OAExC,cAAChI,EAAA,EAAD,CAAKkD,GAAI,EAAT,SACE,cAAC,GAAD,CAAc2C,QAAS5J,EAAKgM,SAAU7G,SAAU,sBAItD,cAACpB,EAAA,EAAD,CAAKkD,GAAI,EAAT,SACE,cAAC4E,EAAA,EAAD,UACE,eAAC9H,EAAA,EAAD,CAAK+H,EAAG,EAAR,UACE,cAACxH,EAAA,EAAD,CAAYN,QAAQ,QAAQO,QAAQ,KAAKC,UAAU,KAAnD,qBAGA,cAAC,GAAD,CAASM,IAAKA,WAIpB,cAACf,EAAA,EAAD,CACEkD,GAAI,EACJgF,aAAc,WACPb,EAAWc,UACdN,IACAR,EAAWc,SAAU,IAL3B,SASE,cAACL,EAAA,EAAD,UACE,eAAC9H,EAAA,EAAD,CAAK+H,EAAG,EAAR,UACE,cAACxH,EAAA,EAAD,CAAYN,QAAQ,QAAQO,QAAQ,KAAKC,UAAU,KAAnD,wBAGA,cAACT,EAAA,EAAD,CAAKkD,GAAI,EAAT,SACIyE,EAYA,cAAC,GAAD,CAAY5G,IAAKA,IAXjB,cAACU,EAAA,EAAD,CACEjB,QAAQ,WACRmB,KAAK,SACLD,MAAM,UACNoD,QAAS,WACP8C,GAAkB,IALtB,2BAiBV,cAAC5H,EAAA,EAAD,CAAKkD,GAAI,EAAT,SACE,cAAC4E,EAAA,EAAD,UACE,eAAC9H,EAAA,EAAD,CAAK+H,EAAG,EAAR,UACE,cAACxH,EAAA,EAAD,CAAYN,QAAQ,QAAQO,QAAQ,KAAKC,UAAU,KAAnD,kBAGA,cAACT,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACiB,EAAA,EAAD,CAAOC,SAAS,OAAhB,6IAMF,cAAC,GAAD,CAAMoC,cAAe3H,EAAK8E,eAvE3B,gD,0HCRIqH,GAxBE,SAAC,GAA+B,IAA7BlH,EAA4B,EAA5BA,KAAMsE,EAAsB,EAAtBA,KAAMzE,EAAgB,EAAhBA,GAC9B,OACE,eAACsH,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,MAEF,cAACC,GAAA,EAAD,CACEC,QAASC,KAAWxH,GACpByH,UAAWC,aAAO,IAAIC,KAAKrD,GAAO,gBAEpC,cAACsD,GAAA,EAAD,UACE,cAAC,IAAD,CACEC,GAAIlH,EAAUrG,EAAwB,CAAEuF,OACxCH,MAAO,CAAEc,MAAO,WAFlB,SAIE,cAACsH,GAAA,EAAD,CAAYC,KAAK,MAAjB,SACE,cAAC,KAAD,cCHGC,GA1BU,WACvB,OACE,eAACb,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,cAAC/D,GAAA,EAAD,CAAUC,UAAU,OAAOhE,QAAQ,WAAWiE,OAAQ,GAAIrE,MAAO,OAEnE,cAACmE,GAAA,EAAD,CACEC,UAAU,OACVhE,QAAQ,cACRiE,OAAQ,GACRrE,MAAM,QAER,cAAC0I,GAAA,EAAD,UACE,cAACE,GAAA,EAAD,CAAYC,KAAK,MAAjB,SACE,cAAC1E,GAAA,EAAD,CACEC,UAAU,OACVhE,QAAQ,cACRiE,OAAQ,GACRrE,MAAO,aCsCJ+I,GA3DG,WAChB,MAMInH,IALIoH,EADR,EACEnN,KACA+G,EAFF,EAEEA,UACAqG,EAHF,EAGEA,cACAC,EAJF,EAIEA,YACAC,EALF,EAKEA,mBAGF,OACE,qCACE,cAACzB,EAAA,EAAD,UACG9E,EACC,eAACwG,GAAA,EAAD,WACE,cAACxJ,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAAC,GAAD,MAEF,cAACN,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAAC,GAAD,MAEF,cAACN,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAAC,GAAD,SAIJ,cAACkJ,GAAA,EAAD,UACGJ,EAAMK,MAAM/E,KAAI,SAACgF,GAAD,OACf,cAAC,IAAMC,SAAP,UACGD,EAAKzN,KAAKyI,KAAI,SAACP,GAAD,OACb,cAAC,GAAD,CAEEpD,GAAIoD,EAAKpD,GACTG,KAAMiD,EAAKjD,KACXsE,KAAMrB,EAAKyF,kBAHNzF,EAAKpD,QAHK2I,EAAKnH,QAAU,UAc3C+G,GACC,cAACtJ,EAAA,EAAD,CAAKkD,GAAI,EAAT,SACE,cAACzB,EAAA,EAAD,CACEjB,QAAQ,YACRkB,MAAM,UACNoD,QAAS,WACPuE,KAEFzH,SAAU2H,EANZ,SAQGA,EAAqB,kBAAoB,0BCtBvCM,GA9BM,WACnB,MAAkC7H,IAApBoH,EAAd,EAAQnN,KAAY+G,EAApB,EAAoBA,UAEpB,OAAKA,GAAcoG,EAKjB,cAACpJ,EAAA,EAAD,CAAKM,GAAI,EAAT,SACE,cAACwH,EAAA,EAAD,UACE,cAAC9H,EAAA,EAAD,CAAK+H,EAAG,EAAR,SACE,eAACxH,EAAA,EAAD,iCACsB,IACnByC,EACC,cAACuB,GAAA,EAAD,CACEC,UAAU,OACVhE,QAAQ,cACRiE,OAAQ,GACRrE,MAAM,QAGRgJ,EAAMK,MAAM,GAAGK,eAjBlB,MCKIC,GATM,WACnB,OACE,eAAC/J,EAAA,EAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,QCaSgK,GAlBK,WAClB,MAAkC5L,IAApBG,EAAd,EAAQtC,KAER,OAFA,EAAoB+G,UAIhB,cAAChD,EAAA,EAAD,CAAKC,QAAQ,OAAOgK,eAAe,WAAnC,SACE,cAAChH,GAAA,EAAD,CAAkBvB,MAAM,UAAUC,KAAM,OAM5C,cAAC3B,EAAA,EAAD,CAAKC,QAAQ,OAAOgK,eAAe,WAAnC,SACG1L,EAAI,gBAAYA,EAAK2C,MAAS,kBC+BtBgJ,OArCf,WACE,IAAMzL,EAAUC,cACRc,EAAUpB,IAAVoB,MAQR,OANAR,qBAAU,WACJQ,GACFf,EAAQQ,QAAQzD,KAEjB,CAACgE,IAGF,qCACE,cAAC2K,EAAA,EAAD,CAAQ1K,SAAS,SAAjB,SACE,cAAC2K,EAAA,EAAD,CAAS5J,QAAQ,QAAjB,SACE,cAACR,EAAA,EAAD,CAAKC,QAAQ,OAAOgK,eAAe,WAAW7J,MAAM,OAApD,SACE,cAAC,GAAD,UAKN,cAACJ,EAAA,EAAD,CAAKI,MAAO,IAAKiK,EAAE,OAAOnH,GAAI,EAA9B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOpB,KAAMtG,EAAiB8O,OAAK,EAAnC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOxI,KAAMtG,EAAiB8O,OAAK,EAAnC,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOxI,KAAMtG,EAAwB8O,OAAK,EAA1C,SACE,cAAC,GAAD,e,8BClCCC,GAAe,CAC1B,CACExJ,GAAI,EACJG,KAAM,iBACN0I,iBAAkB,2BAClB3B,SAAU,CAAC,EAAG,GACduC,QAAS,SACTC,QAAS,UACThF,QAAS,8BACThH,QAAS,GACTgJ,cAAc,GAEhB,CACE1G,GAAI,EACJG,KAAM,iBACN0I,iBAAkB,2BAClB3B,SAAU,CAAC,EAAG,GACduC,QAAS,SACTC,QAAS,UACThF,QAAS,8BACThH,QAAS,GACTgJ,cAAc,GAEhB,CACE1G,GAAI,EACJG,KAAM,cACN0I,iBAAkB,2BAClB3B,SAAU,CAAC,GACXuC,QAAS,SACTC,QAAS,UACThF,QAAS,8BACThH,QAAS,GACTgJ,cAAc,GAEhB,CACE1G,GAAI,EACJG,KAAM,aACN0I,iBAAkB,2BAClB3B,SAAU,CAAC,GACXuC,QAAS,SACTC,QAAS,UACThF,QAAS,8BACThH,QAAS,GACTgJ,cAAc,GAEhB,CACE1G,GAAI,EACJG,KAAM,mBACN0I,iBAAkB,2BAClB3B,SAAU,CAAC,EAAG,GACduC,QAAS,SACTC,QAAS,UACThF,QAAS,8BACThH,QAAS,GACTgJ,cAAc,GAEhB,CACE1G,GAAI,EACJG,KAAM,sBACN0I,iBAAkB,2BAClB3B,SAAU,CAAC,GACXuC,QAAS,SACTC,QAAS,UACThF,QAAS,8BACThH,QAAS,GACTgJ,cAAc,GAEhB,CACE1G,GAAI,EACJG,KAAM,eACN0I,iBAAkB,2BAClB3B,SAAU,CAAC,GACXuC,QAAS,SACTC,QAAS,UACThF,QAAS,8BACThH,QAAS,GACTgJ,cAAc,GAEhB,CACE1G,GAAI,EACJG,KAAM,iBACN0I,iBAAkB,2BAClB3B,SAAU,CAAC,EAAG,GACduC,QAAS,SACTC,QAAS,UACThF,QAAS,8BACThH,QAAS,GACTgJ,cAAc,GAEhB,CACE1G,GAAI,EACJG,KAAM,YACN0I,iBAAkB,2BAClB3B,SAAU,CAAC,GACXuC,QAAS,SACTC,QAAS,UACThF,QAAS,8BACThH,QAAS,GACTgJ,cAAc,GAEhB,CACE1G,GAAI,GACJG,KAAM,aACN0I,iBAAkB,2BAClB3B,SAAU,CAAC,GACXuC,QAAS,SACTC,QAAS,UACThF,QAAS,8BACThH,QAAS,GACTgJ,cAAc,IAILiD,GAAiB,CAC5B,CACE3J,GAAI,EACJoC,MAAO,SACPC,OAAQ,YAICuH,GAAY,GC/HZ1C,GAAW,CACtB,CACElH,GAAI,EACJG,KAAM,qBAER,CACEH,GAAI,EACJG,KAAM,0BAER,CACEH,GAAI,EACJG,KAAM,sCAER,CACEH,GAAI,EACJG,KAAM,sCCHJ0J,GAAc,aAIdC,GAAW,CACf,CACE9O,MAAO6O,GACPE,QAAS,CACP5J,KAAM,UAGV,CACEnF,MAXoB,iBAYpB+O,QAAS,CACP5J,KAAM,eAIN6J,GAAU,SAACpO,GAAD,uBACdkO,GAASG,MAAK,SAAC7G,GAAD,OAAUA,EAAKpI,QAAUY,EAAOb,QAAQC,gBADxC,aACd,EAA8D+O,SAG1DG,GAAU,CAAC,YAEjBrP,IAAMsP,aAAaC,SAASC,KAAI,SAACD,GACwC,IAAD,IAJzDlP,EAIRgP,GAAQD,MAAK,SAACK,GAAD,aAAaA,EAAQC,KAAR,OAAaH,QAAb,IAAaA,GAAb,UAAaA,EAAUxO,cAAvB,aAAa,EAAkBjB,UAE5D6P,QAAQC,eAAR,oBACQL,QADR,IACQA,GADR,UACQA,EAAUxO,cADlB,iBACQ,EAAkB8O,cAD1B,aACQ,EAA0BC,cADlC,YACmDP,EAASxO,OAAOjB,MAGnE6P,QAAQI,KAVG1P,EAUOkP,EAVOS,KAAKC,MAAMD,KAAKE,UAAU7P,MAYnDsP,QAAQQ,YAGV,OAAOZ,MAG4B,WACnC,IAAMa,EAAO,IAAIC,KAAYrQ,IAAO,CAAEsQ,cAAe,MAErDF,EAAKG,MAAM5Q,GAAuB6Q,OAAM,SAACzP,GACvC,IAAKoO,GAAQpO,GACX,MAAO,CAAC,KAGV,IAAQJ,EAAcI,EAAOhB,OAArBY,UAKR,MAAO,CACL,IACA,CACEgG,OALFgI,GAAa7E,OAhDL,EAgDcnJ,EAAoBA,EAAY,OAAI8B,EAMxDpC,KAAMsO,GAAa8B,MAtDb,GAsDoB9P,EAAY,GAtDhC,EAsD4CA,GAClDuN,MAAOS,GAAa7E,YAK1BsG,EAAKM,OAAO/Q,GAA8B6Q,OAAM,WAC9C,MAAO,CAAC,IAAK,CAAErQ,MAAO6O,QAGxBoB,EAAKG,MAAM5Q,GAAsB6Q,OAAM,SAACzP,GACtC,IAAM4B,EAAOwM,GAAQpO,GAErB,OAAK4B,EAIE,CACL,IACA,CACEA,SANK,CAAC,QAWZyN,EAAKG,MAAMI,YAAahR,IAAwB6Q,OAAM,SAACzP,GACrD,IAAKoO,GAAQpO,GACX,MAAO,CAAC,KAGV,IAAM6P,EAASC,YAAsBlR,EAAuB,CAC1DmR,OAAQC,oBADKF,CAEZ9P,EAAOjB,KAEV,IAAe,IAAX8Q,EACF,MAAO,CAAC,KAGV,IAAQzL,EAAOyL,EAAO7Q,OAAdoF,GAER,MAAO,CAAC,IAAKwJ,GAAaS,MAAK,SAAC7G,GAAD,OAAUA,EAAKpD,MAAQA,SAGxDiL,EAAKY,QAAQL,YAAahR,IAAwB6Q,OAAM,SAACzP,GACvD,IAAM4B,EAAOwM,GAAQpO,GAErB,IAAK4B,EACH,MAAO,CAAC,KAGV,IAAMsO,EAAOjB,KAAKC,MAAMlP,EAAOV,MAEzB0I,EAAM4F,GAAauC,WAAU,SAAC3I,GAAD,OAAUA,EAAKpD,KAAO8L,EAAK9L,MAc9D,OAZAwJ,GAAa5F,GAAb,uCACK4F,GAAa5F,IACbkI,GAFL,IAGEpO,QAAQ,GAAD,oBACF8L,GAAa5F,GAAKlG,SADhB,CAEL,CACE+G,KAAM,IAAIqD,KACVpD,QAAQ,cAAD,OAAgBlH,EAAK2C,WAK3B,CAAC,IAAKqJ,GAAa5F,OAG5BqH,EAAKG,MAAM5Q,GAAuB6Q,OAAM,SAACzP,GACvC,OAAKoO,GAAQpO,KAIIoQ,KAAKC,MAAMD,KAAKE,UAGxB,CAAC,KAGH,CAAC,IAAKhF,IATJ,CAAC,QAYZ+D,EAAKG,MAAMI,YAAahR,IAAyB6Q,OAAM,SAACzP,GACtD,IAAKoO,GAAQpO,GACX,MAAO,CAAC,KAGV,IAAM6P,EAASC,YAAsBlR,EAAwB,CAC3DmR,OAAQC,oBADKF,CAEZ9P,EAAOjB,KAEV,OAAe,IAAX8Q,EACK,CAAC,KAKE,KAFGA,EAAO7Q,OAAdoF,GAGC,CACL,IACA,CACEiH,YAAY,IAKX,CACL,IACA,CACEA,YAAY,OAKlBgE,EAAKG,MAAMI,YAAahR,IAAyB6Q,OAAM,SAACzP,GACtD,IAAKoO,GAAQpO,GACX,MAAO,CAAC,KAGV,IAAM6P,EAASC,YAAsBlR,EAAwB,CAC3DmR,OAAQC,oBADKF,CAEZ9P,EAAOjB,KAEV,IAAe,IAAX8Q,EACF,MAAO,CAAC,KAGV,IAAQzL,EAAOyL,EAAO7Q,OAAdoF,GAER,MAAO,CAAC,IAAK2J,GAAeM,MAAK,SAAC7G,GAAD,OAAUA,EAAKpD,MAAQA,SAG1DiL,EAAKG,MAAMI,YAAahR,IAAgB6Q,OAAM,SAACzP,GAC7C,OAAKoO,GAAQpO,IAQE,IAJA8P,YAAsBlR,EAAe,CAClDmR,OAAQC,oBADKF,CAEZ9P,EAAOjB,KAGD,CAAC,KAGH,CAAC,IAAKiP,IAXJ,CAAC,QAcZqB,EAAKM,OAAOC,YAAahR,IAAgB6Q,OAAM,SAACzP,GAG9C,IAFaoO,GAAQpO,GAGnB,MAAO,CAAC,KAGV,IAAMV,EAAO2P,KAAKC,MAAMlP,EAAOV,MAE/B,GAA2B,IAAvBA,EAAK2H,cACP,MAAO,CAAC,KAGV,IAAMiJ,EAAI,2BACL5Q,GADK,IAER8E,GAAIgM,KAAKG,MAAsB,IAAhBH,KAAKE,YAItB,OAFAtC,GAAUwC,KAAKN,GAER,CAAC,IAAKA,MAGfb,EAAK1H,SAASiI,YAAahR,IAAgB6Q,OAAM,SAACzP,GAGhD,IAFaoO,GAAQpO,GAGnB,MAAO,CAAC,KAGV,IAAM6P,EAASC,YAAsBlR,EAAe,CAClDmR,OAAQC,oBADKF,CAEZ9P,EAAOjB,KAEV,IAAe,IAAX8Q,EACF,MAAO,CAAC,KAGV,IAAQzL,EAAOyL,EAAO7Q,OAAdoF,GAEF4D,EAAMgG,GAAUmC,WAAU,SAAC3I,GAAD,OAAUA,EAAKpD,MAAQA,KAEvD,EAAe4J,GAAUyC,OAAOzI,EAAK,GAErC,MAAO,CAAC,IAFR,wBCxPJ0I,GAEA,IAAMpQ,GAAc,IAAIqQ,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,eAAC,sBAAD,CAAqBC,OAAQzQ,GAA7B,UACE,cAAC,GAAD,IACA,cAAC,IAAD,WAIN0Q,SAASC,eAAe,W","file":"static/js/main.c7dee897.chunk.js","sourcesContent":["export const apiRoutes = {\n  getTokenByPassword: '/api/getTokenByPassword',\n  getProfile: '/api/getProfile',\n  getUserList: '/api/getUserList',\n  appointment: '/api/appointment/:id',\n  getServices: '/api/getServices',\n  getCarDetail: '/api/getCarDetail/:id',\n  getInsurance: '/api/getInsurance/:id',\n  job: '/api/job/:id?',\n};\n\nexport const pageRoutes = {\n  main: '/',\n  auth: '/auth',\n  appointment: '/appointment/:id',\n};\n","import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nexport const api = {\n  get: <T>(url: string, params?: object) =>\n    axios.get<T>(url, {\n      headers: {\n        token: Cookies.get('token'),\n      },\n      ...params,\n    }),\n  post: <T>(url: string, data: any) =>\n    axios.post<T>(url, data, {\n      headers: {\n        token: Cookies.get('token'),\n      },\n    }),\n  patch: <T>(url: string, data: any) =>\n    axios.patch<T>(url, data, {\n      headers: {\n        token: Cookies.get('token'),\n      },\n    }),\n  delete: <T>(url: string) =>\n    axios.delete<T>(url, {\n      headers: {\n        token: Cookies.get('token'),\n      },\n    }),\n};\n","import { api } from './api';\nimport {\n  useInfiniteQuery,\n  useMutation,\n  useQuery,\n  useQueryClient,\n  UseQueryOptions,\n} from 'react-query';\nimport { QueryFunctionContext } from 'react-query/types/core/types';\nimport { AxiosError, AxiosResponse } from 'axios';\nimport { GetInfinitePagesInterface } from '../interfaces';\n\ntype QueryKeyT = [string, object | undefined];\n\nexport const fetcher = <T>({\n  queryKey,\n  pageParam,\n}: QueryFunctionContext<QueryKeyT>): Promise<T> => {\n  const [url, params] = queryKey;\n  return api\n    .get<T>(url, { params: { ...params, pageParam } })\n    .then((res) => res.data);\n};\n\nexport const useLoadMore = <T>(url: string | null, params?: object) => {\n  const context = useInfiniteQuery<\n    GetInfinitePagesInterface<T>,\n    Error,\n    GetInfinitePagesInterface<T>,\n    QueryKeyT\n  >(\n    [url!, params],\n    ({ queryKey, pageParam = 1 }) => fetcher({ queryKey, pageParam }),\n    {\n      getPreviousPageParam: (firstPage) => firstPage.previousId ?? false,\n      getNextPageParam: (lastPage) => {\n        return lastPage.nextId ?? false;\n      },\n    }\n  );\n\n  return context;\n};\n\nexport const usePrefetch = <T>(url: string | null, params?: object) => {\n  const queryClient = useQueryClient();\n\n  return () => {\n    if (!url) {\n      return;\n    }\n\n    queryClient.prefetchQuery<T, Error, T, QueryKeyT>(\n      [url!, params],\n      ({ queryKey }) => fetcher({ queryKey })\n    );\n  };\n};\n\nexport const useFetch = <T>(\n  url: string | null,\n  params?: object,\n  config?: UseQueryOptions<T, Error, T, QueryKeyT>\n) => {\n  const context = useQuery<T, Error, T, QueryKeyT>(\n    [url!, params],\n    ({ queryKey }) => fetcher({ queryKey }),\n    {\n      enabled: !!url,\n      ...config,\n    }\n  );\n\n  return context;\n};\n\nconst useGenericMutation = <T, S>(\n  func: (data: T | S) => Promise<AxiosResponse<S>>,\n  url: string,\n  params?: object,\n  updater?: ((oldData: T, newData: S) => T) | undefined\n) => {\n  const queryClient = useQueryClient();\n\n  return useMutation<AxiosResponse, AxiosError, T | S>(func, {\n    onMutate: async (data) => {\n      await queryClient.cancelQueries([url!, params]);\n\n      const previousData = queryClient.getQueryData([url!, params]);\n\n      queryClient.setQueryData<T>([url!, params], (oldData) => {\n        return updater ? updater(oldData!, data as S) : (data as T);\n      });\n\n      return previousData;\n    },\n    onError: (err, _, context) => {\n      queryClient.setQueryData([url!, params], context);\n    },\n    onSettled: () => {\n      queryClient.invalidateQueries([url!, params]);\n    },\n  });\n};\n\nexport const useDelete = <T>(\n  url: string,\n  params?: object,\n  updater?: (oldData: T, id: string | number) => T\n) => {\n  return useGenericMutation<T, string | number>(\n    (id) => api.delete(`${url}/${id}`),\n    url,\n    params,\n    updater\n  );\n};\n\nexport const usePost = <T, S>(\n  url: string,\n  params?: object,\n  updater?: (oldData: T, newData: S) => T\n) => {\n  return useGenericMutation<T, S>(\n    (data) => api.post<S>(url, data),\n    url,\n    params,\n    updater\n  );\n};\n\nexport const useUpdate = <T, S>(\n  url: string,\n  params?: object,\n  updater?: (oldData: T, newData: S) => T\n) => {\n  return useGenericMutation<T, S>(\n    (data) => api.patch<S>(url, data),\n    url,\n    params,\n    updater\n  );\n};\n","import { apiRoutes } from '../routes';\nimport { api } from '../utils/api';\nimport { ProfileInterface } from '../interfaces/auth';\nimport { useFetch } from '../utils/reactQuery';\n\nexport const getTokenByPassword = (email: string, password: string) =>\n  api.post<{ token: string }>(apiRoutes.getTokenByPassword, {\n    email,\n    password,\n  });\n\nexport const useGetProfile = () => {\n  const context = useFetch<{ user: ProfileInterface }>(\n    apiRoutes.getProfile,\n    undefined,\n    { retry: false }\n  );\n  return { ...context, data: context.data?.user };\n};\n","import React, { useEffect, useState } from 'react';\nimport { Alert, Box, Button, TextField, Typography } from '@mui/material';\nimport { getTokenByPassword } from '../api/auth';\nimport Cookies from 'js-cookie';\nimport { useHistory } from 'react-router-dom';\nimport { pageRoutes } from '../routes';\nimport { toast } from 'react-toastify';\nimport { useQueryClient } from 'react-query';\n\nconst Auth = () => {\n  const history = useHistory();\n  const queryClient = useQueryClient();\n\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    if (Cookies.get('token')) {\n      history.replace(pageRoutes.main);\n    }\n  }, []);\n\n  const onSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    setBtnLoading(true);\n    try {\n      const resp = await getTokenByPassword(email, password);\n      if (resp.data.token) {\n        Cookies.set('token', resp.data.token);\n        history.replace(pageRoutes.main);\n        queryClient.invalidateQueries();\n      } else {\n        toast.error('Invalid details', {\n          position: 'bottom-left',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    } catch (e) {\n      toast.error('Invalid details', {\n        position: 'bottom-left',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } finally {\n      setBtnLoading(false);\n    }\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      width=\"300px\"\n      margin=\"36px auto auto\"\n    >\n      <Box mb={6}>\n        <Typography display=\"block\" variant=\"h1\" component=\"h2\">\n          Sign in\n        </Typography>\n      </Box>\n\n      <form\n        noValidate\n        autoComplete=\"off\"\n        style={{ width: '100%' }}\n        onSubmit={onSubmit}\n      >\n        <Box mb={2}>\n          <TextField\n            fullWidth\n            autoComplete=\"off\"\n            id=\"outlined-basic\"\n            label=\"Email\"\n            variant=\"outlined\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n        </Box>\n\n        <Box mb={2}>\n          <TextField\n            fullWidth\n            autoComplete=\"off\"\n            id=\"outlined-basic\"\n            label=\"Password\"\n            variant=\"outlined\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </Box>\n\n        <Box mb={2}>\n          <Alert severity=\"info\">\n            You could login with any credentials, even with empty fields. It\n            doesn't matter. Just for demonstration purposes.\n          </Alert>\n        </Box>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          disabled={btnLoading}\n          fullWidth\n        >\n          Submit\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default Auth;\n","import { compile } from 'path-to-regexp';\n\nexport const pathToUrl = (path: string, params: object = {}) =>\n  compile(path)(params);\n","import {\n  useFetch,\n  useLoadMore,\n  usePrefetch,\n  useUpdate,\n} from '../utils/reactQuery';\nimport { apiRoutes } from '../routes';\nimport {\n  AppointmentInterface,\n  CarDetailInterface,\n  InsuranceDetailsInterface,\n} from '../interfaces/appointments';\nimport { pathToUrl } from '../utils/router';\n\nexport const useGetAppointmentsList = () =>\n  useLoadMore<AppointmentInterface[]>(apiRoutes.getUserList);\n\nexport const useGetAppointment = (id: number) =>\n  useFetch<AppointmentInterface>(pathToUrl(apiRoutes.appointment, { id }));\n\nexport const usePatchAppointment = (id: number) =>\n  useUpdate<AppointmentInterface, AppointmentInterface>(\n    pathToUrl(apiRoutes.appointment, { id })\n  );\n\nexport const useGetCarDetail = (id: number | null) =>\n  useFetch<CarDetailInterface>(\n    pathToUrl(apiRoutes.getCarDetail, { id }),\n    undefined,\n    { staleTime: 2000 }\n  );\n\nexport const useGetInsurance = (id: number | null) =>\n  useFetch<InsuranceDetailsInterface>(\n    id ? pathToUrl(apiRoutes.getInsurance, { id }) : null\n  );\n\nexport const usePrefetchCarDetails = (id: number | null) =>\n  usePrefetch<InsuranceDetailsInterface>(\n    id ? pathToUrl(apiRoutes.getCarDetail, { id }) : null\n  );\n","import React from 'react';\nimport { Box, CircularProgress, Typography } from '@mui/material';\nimport { useGetCarDetail } from '../../api/appointments';\n\ntype Props = {\n  id: number;\n};\n\nconst CarDetails = ({ id }: Props) => {\n  const { data, isLoading } = useGetCarDetail(id);\n\n  if (isLoading) {\n    return <CircularProgress />;\n  }\n\n  if (!data) {\n    return <span>Nothing found</span>;\n  }\n\n  return (\n    <Box>\n      <Box mt={2}>\n        <Typography>Model: {data.model}</Typography>\n      </Box>\n\n      <Box mt={2}>\n        <Typography>Number: {data.number}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CarDetails;\n","import { useDelete, useFetch, usePost } from '../utils/reactQuery';\nimport { JobInterface } from '../interfaces/appointments';\nimport { pathToUrl } from '../utils/router';\nimport { apiRoutes } from '../routes';\n\nexport const useGetJobs = () =>\n  useFetch<JobInterface[]>(pathToUrl(apiRoutes.job));\n\nexport const useAddJob = (\n  updater: (oldData: JobInterface[], newData: JobInterface) => JobInterface[]\n) =>\n  usePost<JobInterface[], JobInterface>(\n    pathToUrl(apiRoutes.job),\n    undefined,\n    updater\n  );\n\nexport const useDeleteJob = (\n  updater: (\n    oldData: JobInterface[],\n    deletedId: string | number\n  ) => JobInterface[]\n) => useDelete<JobInterface[]>(pathToUrl(apiRoutes.job), undefined, updater);\n","import { toast } from 'react-toastify';\n\nexport const pushNotification = (msg: string, type: 'error' = 'error') => {\n  toast.error(msg, {\n    position: 'bottom-left',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n","import React, { useState } from 'react';\nimport { Box, Fab, TextField, Typography } from '@mui/material';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useAddJob, useDeleteJob, useGetJobs } from '../../api/jobs';\nimport Skeleton from '@mui/material/Skeleton';\nimport { pushNotification } from '../../utils/notifications';\n\ninterface Props {\n  appointmentId: number;\n}\n\nconst Jobs = ({ appointmentId }: Props) => {\n  const [jobName, setJobName] = useState('');\n\n  const { data, isLoading } = useGetJobs();\n\n  const mutationAdd = useAddJob((oldData, newData) => [...oldData, newData]);\n  const mutationDelete = useDeleteJob((oldData, id) =>\n    oldData.filter((item) => item.id !== id)\n  );\n\n  const onAdd = async () => {\n    try {\n      await mutationAdd.mutateAsync({\n        name: jobName,\n        appointmentId,\n      });\n      setJobName('');\n    } catch (e) {\n      pushNotification(`Cannot add the job: ${jobName}`);\n    }\n  };\n\n  const onDelete = async (id: number) => {\n    try {\n      await mutationDelete.mutateAsync(id);\n    } catch (e) {\n      pushNotification(`Cannot delete the job`);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Box mt={2} data-testid=\"loading-skeleton\">\n        <Box mb={2}>\n          <Skeleton animation=\"wave\" variant=\"rectangular\" height={15} />\n        </Box>\n        <Box mb={2}>\n          <Skeleton animation=\"wave\" variant=\"rectangular\" height={15} />\n        </Box>\n      </Box>\n    );\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <Box>\n      {data.map((item, idx) => (\n        <Box key={item.id || idx} display=\"flex\" alignItems=\"center\" mt={2}>\n          <Box width=\"100%\">\n            <Typography>{item.name}</Typography>\n          </Box>\n          <Box ml={1}>\n            <Fab\n              color=\"primary\"\n              aria-label=\"delete\"\n              size=\"small\"\n              onClick={() => {\n                onDelete(item.id!);\n              }}\n              data-testid={`delete-${item.id}`}\n            >\n              <DeleteIcon />\n            </Fab>\n          </Box>\n        </Box>\n      ))}\n      <Box display=\"flex\" alignItems=\"center\" mt={2}>\n        <TextField\n          label=\"Outlined\"\n          variant=\"outlined\"\n          value={jobName}\n          onChange={(e) => setJobName(e.target.value)}\n          fullWidth\n          disabled={mutationAdd.isLoading}\n          inputProps={{\n            'data-testid': 'input',\n          }}\n        />\n        <Box ml={1} position=\"relative\">\n          <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={() => {\n              onAdd();\n            }}\n            size=\"small\"\n            disabled={mutationAdd.isLoading || !jobName}\n            data-testid=\"add\"\n          >\n            <AddIcon />\n          </Fab>\n          {mutationAdd.isLoading && (\n            <CircularProgress\n              size={50}\n              sx={{\n                position: 'absolute',\n                top: -5,\n                left: -5,\n                zIndex: 1,\n              }}\n            />\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Jobs;\n","import React from 'react';\nimport { Box, Button, Typography } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\nimport { useGetAppointment, usePatchAppointment } from '../../api/appointments';\n\ntype Props = {\n  id: number;\n};\n\nconst History = ({ id }: Props) => {\n  const { data, isFetching } = useGetAppointment(+id);\n  const mutation = usePatchAppointment(+id);\n\n  if (isFetching) {\n    return (\n      <Box>\n        <Box pt={2}>\n          <Skeleton animation=\"wave\" variant=\"rectangular\" height={15} />\n        </Box>\n        <Box pt={2}>\n          <Skeleton animation=\"wave\" variant=\"rectangular\" height={15} />\n        </Box>\n        <Box pt={2}>\n          <Skeleton animation=\"wave\" variant=\"rectangular\" height={15} />\n        </Box>\n      </Box>\n    );\n  }\n\n  const onSubmit = () => {\n    mutation.mutate(data!);\n  };\n\n  return (\n    <>\n      {data?.history.map((item) => (\n        <Typography variant=\"body1\" key={item.date}>\n          Date: {item.date} <br />\n          Comment: {item.comment}\n        </Typography>\n      ))}\n\n      {!data?.history.length && !isFetching && (\n        <Box mt={2}>\n          <span>Nothing found</span>\n        </Box>\n      )}\n      <Box mt={3}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={onSubmit}\n          disabled={!data || mutation.isLoading}\n        >\n          Save\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default History;\n","import React, { useEffect, useState } from 'react';\nimport { Checkbox, FormControlLabel, FormGroup } from '@mui/material';\nimport { useGetServices } from '../../api/services';\n\ntype Props = {\n  checked: number[];\n  onChange: (value: number[]) => void;\n};\n\nconst ServicesCheck = ({ checked, onChange }: Props) => {\n  const { data } = useGetServices();\n\n  const [value, setValue] = useState(checked);\n\n  useEffect(() => {\n    onChange(value);\n  }, [value]);\n\n  const handleChange = (id: number, isChecked: boolean) => {\n    if (isChecked) {\n      setValue((prevValue) => [...prevValue, id]);\n    } else {\n      setValue((prevValue) => prevValue.filter((item) => item !== id));\n    }\n  };\n\n  return (\n    <FormGroup>\n      {data!.map((item) => (\n        <FormControlLabel\n          key={item.id}\n          control={\n            <Checkbox\n              checked={value.includes(item.id)}\n              onChange={(_, isChecked) => {\n                handleChange(item.id, isChecked);\n              }}\n              name={String(item.id)}\n            />\n          }\n          label={item.name}\n        />\n      ))}\n    </FormGroup>\n  );\n};\n\nexport default ServicesCheck;\n","import { useFetch } from '../utils/reactQuery';\nimport { ServiceInterface } from '../interfaces/appointments';\nimport { apiRoutes } from '../routes';\n\nexport const useGetServices = () =>\n  useFetch<ServiceInterface[]>(apiRoutes.getServices, undefined, {\n    suspense: true,\n    retry: 0,\n  });\n","import React from 'react';\nimport {\n  Alert,\n  AlertTitle,\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n} from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { QueryErrorResetBoundary } from 'react-query';\nimport ServicesCheck from './ServicesCheck';\n\ntype Props = {\n  checked: number[];\n  onChange: (value: number[]) => void;\n};\n\nconst ServicesList = ({ checked, onChange }: Props) => {\n  return (\n    <FormControl component=\"fieldset\" fullWidth>\n      <FormLabel component=\"legend\">Services</FormLabel>\n\n      <QueryErrorResetBoundary>\n        {({ reset }) => (\n          <ErrorBoundary\n            fallbackRender={({ error, resetErrorBoundary }) => (\n              <Box width=\"100%\" mt={2}>\n                <Alert severity=\"error\">\n                  <AlertTitle>\n                    <strong>Error!</strong>\n                  </AlertTitle>\n                  {error.message}\n                </Alert>\n\n                <Box mt={2}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    onClick={() => resetErrorBoundary()}\n                  >\n                    Try again\n                  </Button>\n                </Box>\n              </Box>\n            )}\n            onReset={reset}\n          >\n            <React.Suspense\n              fallback={\n                <Box width=\"100%\">\n                  <Box mb={1}>\n                    <Skeleton variant=\"text\" animation=\"wave\" />\n                  </Box>\n                  <Box mb={1}>\n                    <Skeleton variant=\"text\" animation=\"wave\" />\n                  </Box>\n                  <Box mb={1}>\n                    <Skeleton variant=\"text\" animation=\"wave\" />\n                  </Box>\n                </Box>\n              }\n            >\n              <ServicesCheck checked={checked} onChange={onChange} />\n            </React.Suspense>\n          </ErrorBoundary>\n        )}\n      </QueryErrorResetBoundary>\n    </FormControl>\n  );\n};\n\nexport default ServicesList;\n","import React, { useRef, useState } from 'react';\nimport { Alert, Box, Button, Card, Typography } from '@mui/material';\nimport {\n  useGetAppointment,\n  useGetInsurance,\n  usePrefetchCarDetails,\n} from '../api/appointments';\nimport { useParams } from 'react-router-dom';\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\nimport CarDetails from '../components/CarDetails/CarDetails';\nimport Jobs from '../components/Jobs/Jobs';\nimport History from '../components/History/History';\nimport ServicesList from '../components/ServicesList/ServicesList';\nimport Skeleton from '@mui/material/Skeleton';\n\nconst Appointment = () => {\n  const prefetched = useRef<boolean>();\n  const { id } = useParams<{ id: string }>();\n  const { data, isLoading } = useGetAppointment(+id);\n  const { data: insurance } = useGetInsurance(data?.hasInsurance ? +id : null);\n  const [showAdditional, setShowAdditional] = useState(false);\n  const prefetchCarDetails = usePrefetchCarDetails(+id);\n\n  if (isLoading) {\n    return (\n      <Box data-testid=\"appointment-skeleton\">\n        <Box mb={2}>\n          <Card>\n            <Skeleton variant=\"rectangular\" height={303} animation=\"wave\" />\n          </Card>\n        </Box>\n\n        <Box mb={2}>\n          <Card>\n            <Skeleton variant=\"rectangular\" height={173} animation=\"wave\" />\n          </Card>\n        </Box>\n\n        <Box mb={2}>\n          <Card>\n            <Skeleton variant=\"rectangular\" height={125} animation=\"wave\" />\n          </Card>\n        </Box>\n\n        <Box mb={2}>\n          <Card>\n            <Skeleton variant=\"rectangular\" height={145} animation=\"wave\" />\n          </Card>\n        </Box>\n      </Box>\n    );\n  }\n\n  if (!data) {\n    return <>No data</>;\n  }\n\n  return (\n    <>\n      <Card>\n        <Box p={2}>\n          <Typography display=\"block\" variant=\"h3\" component=\"h3\">\n            {data.name} {insurance?.allCovered && <DoneAllIcon />}\n          </Typography>\n          <Box mt={3}>\n            <ServicesList checked={data.services} onChange={() => {}} />\n          </Box>\n        </Box>\n      </Card>\n      <Box mt={2}>\n        <Card>\n          <Box p={2}>\n            <Typography display=\"block\" variant=\"h4\" component=\"h4\">\n              History\n            </Typography>\n            <History id={+id} />\n          </Box>\n        </Card>\n      </Box>\n      <Box\n        mt={2}\n        onMouseEnter={() => {\n          if (!prefetched.current) {\n            prefetchCarDetails();\n            prefetched.current = true;\n          }\n        }}\n      >\n        <Card>\n          <Box p={2}>\n            <Typography display=\"block\" variant=\"h4\" component=\"h4\">\n              Additional\n            </Typography>\n            <Box mt={2}>\n              {!showAdditional ? (\n                <Button\n                  variant=\"outlined\"\n                  size=\"medium\"\n                  color=\"primary\"\n                  onClick={() => {\n                    setShowAdditional(true);\n                  }}\n                >\n                  Show\n                </Button>\n              ) : (\n                <CarDetails id={+id} />\n              )}\n            </Box>\n          </Box>\n        </Card>\n      </Box>\n      <Box mt={2}>\n        <Card>\n          <Box p={2}>\n            <Typography display=\"block\" variant=\"h4\" component=\"h4\">\n              Jobs\n            </Typography>\n            <Box mb={2}>\n              <Alert severity=\"info\">\n                Appointment with id = 2 will always cause the error for\n                creating/deleting jobs to demonstrate the optimistic change\n                rollback.\n              </Alert>\n            </Box>\n            <Jobs appointmentId={data.id} />\n          </Box>\n        </Card>\n      </Box>\n    </>\n  );\n};\n\nexport default Appointment;\n","import React from 'react';\nimport upperFirst from 'lodash/upperFirst';\nimport { format } from 'date-fns';\nimport {\n  Avatar,\n  IconButton,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport InsertInvitationIcon from '@mui/icons-material/InsertInvitation';\nimport { pathToUrl } from '../../utils/router';\nimport { pageRoutes } from '../../routes';\n\ntype Props = {\n  id: number;\n  name: string;\n  date: string;\n};\n\nconst UserItem = ({ name, date, id }: Props) => {\n  return (\n    <ListItem>\n      <ListItemAvatar>\n        <Avatar />\n      </ListItemAvatar>\n      <ListItemText\n        primary={upperFirst(name)}\n        secondary={format(new Date(date), 'd MMM yyyy')}\n      />\n      <ListItemSecondaryAction>\n        <Link\n          to={pathToUrl(pageRoutes.appointment, { id })}\n          style={{ color: 'inherit' }}\n        >\n          <IconButton edge=\"end\">\n            <InsertInvitationIcon />\n          </IconButton>\n        </Link>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\nimport {\n  IconButton,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n} from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\nconst UserItemSkeleton = () => {\n  return (\n    <ListItem>\n      <ListItemAvatar>\n        <Skeleton animation=\"wave\" variant=\"circular\" height={50} width={50} />\n      </ListItemAvatar>\n      <Skeleton\n        animation=\"wave\"\n        variant=\"rectangular\"\n        height={15}\n        width=\"60%\"\n      />\n      <ListItemSecondaryAction>\n        <IconButton edge=\"end\">\n          <Skeleton\n            animation=\"wave\"\n            variant=\"rectangular\"\n            height={15}\n            width={50}\n          />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default UserItemSkeleton;\n","import React from 'react';\nimport { Box, Button, Card, List } from '@mui/material';\nimport UserItem from '../UserItem/UserItem';\nimport UserItemSkeleton from '../UserItem/UserItemSkeleton';\nimport { useGetAppointmentsList } from '../../api/appointments';\n\nconst UsersList = () => {\n  const {\n    data: list,\n    isLoading,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useGetAppointmentsList();\n\n  return (\n    <>\n      <Card>\n        {isLoading ? (\n          <List>\n            <Box mb={1}>\n              <UserItemSkeleton />\n            </Box>\n            <Box mb={1}>\n              <UserItemSkeleton />\n            </Box>\n            <Box mb={1}>\n              <UserItemSkeleton />\n            </Box>\n          </List>\n        ) : (\n          <List>\n            {list!.pages.map((page) => (\n              <React.Fragment key={page.nextId || 0}>\n                {page.data.map((item) => (\n                  <UserItem\n                    key={item.id}\n                    id={item.id}\n                    name={item.name}\n                    date={item.appointment_date}\n                  />\n                ))}\n              </React.Fragment>\n            ))}\n          </List>\n        )}\n      </Card>\n      {hasNextPage && (\n        <Box mt={2}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              fetchNextPage();\n            }}\n            disabled={isFetchingNextPage}\n          >\n            {isFetchingNextPage ? 'Loading more...' : 'Load more users'}\n          </Button>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport { Box, Card, Typography } from '@mui/material';\nimport { useGetAppointmentsList } from '../../api/appointments';\nimport Skeleton from '@mui/material/Skeleton';\n\nconst UsersSummary = () => {\n  const { data: list, isLoading } = useGetAppointmentsList();\n\n  if (!isLoading && !list) {\n    return null;\n  }\n\n  return (\n    <Box mb={2}>\n      <Card>\n        <Box p={2}>\n          <Typography>\n            Total appointments:{' '}\n            {isLoading ? (\n              <Skeleton\n                animation=\"wave\"\n                variant=\"rectangular\"\n                height={15}\n                width=\"60%\"\n              />\n            ) : (\n              list!.pages[0].count\n            )}\n          </Typography>\n        </Box>\n      </Card>\n    </Box>\n  );\n};\n\nexport default UsersSummary;\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport UsersList from '../components/UsersList/UsersList';\nimport UsersSummary from '../components/UsersSummary/UsersSummary';\n\nconst Appointments = () => {\n  return (\n    <Box>\n      <UsersSummary />\n      <UsersList />\n    </Box>\n  );\n};\n\nexport default Appointments;\n","import React from 'react';\nimport { Box, CircularProgress } from '@mui/material';\nimport { useGetProfile } from '../../api/auth';\n\nconst UserProfile = () => {\n  const { data: user, isLoading } = useGetProfile();\n\n  if (isLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"flex-end\">\n        <CircularProgress color=\"inherit\" size={24} />\n      </Box>\n    );\n  }\n\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      {user ? `User: ${user.name}` : 'Unauthorized'}\n    </Box>\n  );\n};\n\nexport default UserProfile;\n","import React, { useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport './App.css';\nimport Auth from './pages/Auth';\nimport { pageRoutes } from './routes';\nimport { useGetProfile } from './api/auth';\nimport { AppBar, Box, Toolbar } from '@mui/material';\nimport Appointment from './pages/Appointment';\nimport Appointments from './pages/Appointments';\nimport UserProfile from './components/UserProfile/UserProfile';\n\nfunction App() {\n  const history = useHistory();\n  const { error } = useGetProfile();\n\n  useEffect(() => {\n    if (error) {\n      history.replace(pageRoutes.auth);\n    }\n  }, [error]);\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Box display=\"flex\" justifyContent=\"flex-end\" width=\"100%\">\n            <UserProfile />\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      <Box width={500} m=\"auto\" mt={2}>\n        <Switch>\n          <Route path={pageRoutes.main} exact>\n            <Appointments />\n          </Route>\n          <Route path={pageRoutes.auth} exact>\n            <Auth />\n          </Route>\n          <Route path={pageRoutes.appointment} exact>\n            <Appointment />\n          </Route>\n        </Switch>\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","import {\n  AppointmentInterface,\n  CarDetailInterface,\n  JobInterface,\n} from '../interfaces/appointments';\n\nexport const appointments = [\n  {\n    id: 1,\n    name: 'Hector Mckeown',\n    appointment_date: '2021-08-25T17:52:48.132Z',\n    services: [1, 2],\n    address: 'London',\n    vehicle: 'FR14ERF',\n    comment: 'Car does not work correctly',\n    history: [],\n    hasInsurance: true,\n  },\n  {\n    id: 2,\n    name: 'Carley Howarth',\n    appointment_date: '2021-08-25T17:52:48.132Z',\n    services: [2, 4],\n    address: 'London',\n    vehicle: 'FR14ERF',\n    comment: 'Car does not work correctly',\n    history: [],\n    hasInsurance: false,\n  },\n  {\n    id: 3,\n    name: 'Kurt Ingram',\n    appointment_date: '2021-08-25T17:52:48.132Z',\n    services: [1],\n    address: 'London',\n    vehicle: 'FR14ERF',\n    comment: 'Car does not work correctly',\n    history: [],\n    hasInsurance: false,\n  },\n  {\n    id: 4,\n    name: 'Ciara Kaur',\n    appointment_date: '2021-08-25T17:52:48.132Z',\n    services: [2],\n    address: 'London',\n    vehicle: 'FR14ERF',\n    comment: 'Car does not work correctly',\n    history: [],\n    hasInsurance: false,\n  },\n  {\n    id: 5,\n    name: 'Keelan Mcdonnell',\n    appointment_date: '2021-08-25T17:52:48.132Z',\n    services: [2, 3],\n    address: 'London',\n    vehicle: 'FR14ERF',\n    comment: 'Car does not work correctly',\n    history: [],\n    hasInsurance: false,\n  },\n  {\n    id: 6,\n    name: 'Stefanie Whitehouse',\n    appointment_date: '2021-08-25T17:52:48.132Z',\n    services: [4],\n    address: 'London',\n    vehicle: 'FR14ERF',\n    comment: 'Car does not work correctly',\n    history: [],\n    hasInsurance: false,\n  },\n  {\n    id: 7,\n    name: 'Eryn Mahoney',\n    appointment_date: '2021-08-25T17:52:48.132Z',\n    services: [1],\n    address: 'London',\n    vehicle: 'FR14ERF',\n    comment: 'Car does not work correctly',\n    history: [],\n    hasInsurance: false,\n  },\n  {\n    id: 8,\n    name: 'Alysia Clayton',\n    appointment_date: '2021-08-25T17:52:48.132Z',\n    services: [1, 4],\n    address: 'London',\n    vehicle: 'FR14ERF',\n    comment: 'Car does not work correctly',\n    history: [],\n    hasInsurance: false,\n  },\n  {\n    id: 9,\n    name: 'Edna Long',\n    appointment_date: '2021-08-25T17:52:48.132Z',\n    services: [3],\n    address: 'London',\n    vehicle: 'FR14ERF',\n    comment: 'Car does not work correctly',\n    history: [],\n    hasInsurance: false,\n  },\n  {\n    id: 10,\n    name: 'Thea Xiong',\n    appointment_date: '2021-08-25T17:52:48.132Z',\n    services: [2],\n    address: 'London',\n    vehicle: 'FR14ERF',\n    comment: 'Car does not work correctly',\n    history: [],\n    hasInsurance: false,\n  },\n] as AppointmentInterface[];\n\nexport const carDetailsMock = [\n  {\n    id: 1,\n    model: 'Nissan',\n    number: 'KR15BWN',\n  },\n] as CarDetailInterface[];\n\nexport const jobsMocks = [] as JobInterface[];\n","export const services = [\n  {\n    id: 1,\n    name: 'Replace a cambelt',\n  },\n  {\n    id: 2,\n    name: 'Replace oil and filter',\n  },\n  {\n    id: 3,\n    name: 'Replace front brake pads and discs',\n  },\n  {\n    id: 4,\n    name: 'Replace rare brake pads and discs',\n  },\n];\n","import MockAdapter from 'axios-mock-adapter';\nimport { match, pathToRegexp } from 'path-to-regexp';\nimport axios, { AxiosRequestConfig } from 'axios';\nimport { apiRoutes } from '../routes';\nimport {\n  appointments,\n  carDetailsMock,\n  jobsMocks,\n} from '../fixtures/appointments';\nimport { services } from '../fixtures/services';\nimport { InsuranceDetailsInterface } from '../interfaces/appointments';\n\nconst ADMIN_TOKEN = 'admintoken';\nconst MODERATOR_TOKEN = 'moderatortoken';\nconst COUNT = 5;\n\nconst PROFILES = [\n  {\n    token: ADMIN_TOKEN,\n    profile: {\n      name: 'Admin',\n    },\n  },\n  {\n    token: MODERATOR_TOKEN,\n    profile: {\n      name: 'Moderator',\n    },\n  },\n];\nconst getUser = (config: AxiosRequestConfig) =>\n  PROFILES.find((item) => item.token === config.headers.token)?.profile;\n\nconst clone = (data: any) => JSON.parse(JSON.stringify(data));\nconst exclude = [/assets\\//];\n\naxios.interceptors.response.use((response) => {\n  if (!exclude.find((pattern) => pattern.test(response?.config?.url!))) {\n    // eslint-disable-next-line no-console\n    console.groupCollapsed(\n      `<= ${response?.config?.method?.toUpperCase()} ${response.config.url}`\n    );\n    // eslint-disable-next-line no-console\n    console.dir(clone(response));\n    // eslint-disable-next-line no-console\n    console.groupEnd();\n  }\n\n  return response;\n});\n\nexport const initializeMockAdapter = () => {\n  const mock = new MockAdapter(axios, { delayResponse: 1000 });\n\n  mock.onGet(apiRoutes.getUserList).reply((config) => {\n    if (!getUser(config)) {\n      return [403];\n    }\n\n    const { pageParam } = config.params;\n\n    const nextId =\n      appointments.length > pageParam * COUNT ? pageParam + 1 : undefined;\n\n    return [\n      200,\n      {\n        nextId,\n        data: appointments.slice((pageParam - 1) * COUNT, pageParam * COUNT),\n        count: appointments.length,\n      },\n    ];\n  });\n\n  mock.onPost(apiRoutes.getTokenByPassword).reply(() => {\n    return [200, { token: ADMIN_TOKEN }];\n  });\n\n  mock.onGet(apiRoutes.getProfile).reply((config) => {\n    const user = getUser(config);\n\n    if (!user) {\n      return [403];\n    }\n\n    return [\n      200,\n      {\n        user,\n      },\n    ];\n  });\n\n  mock.onGet(pathToRegexp(apiRoutes.appointment)).reply((config) => {\n    if (!getUser(config)) {\n      return [403];\n    }\n\n    const result = match<{ id: string }>(apiRoutes.appointment, {\n      decode: decodeURIComponent,\n    })(config.url!);\n\n    if (result === false) {\n      return [403];\n    }\n\n    const { id } = result.params;\n\n    return [200, appointments.find((item) => item.id === +id)];\n  });\n\n  mock.onPatch(pathToRegexp(apiRoutes.appointment)).reply((config) => {\n    const user = getUser(config);\n\n    if (!user) {\n      return [403];\n    }\n\n    const body = JSON.parse(config.data);\n\n    const idx = appointments.findIndex((item) => item.id === body.id);\n\n    appointments[idx] = {\n      ...appointments[idx],\n      ...body,\n      history: [\n        ...appointments[idx].history,\n        {\n          date: new Date(),\n          comment: `Changed by ${user.name}`,\n        },\n      ],\n    };\n\n    return [200, appointments[idx]];\n  });\n\n  mock.onGet(apiRoutes.getServices).reply((config) => {\n    if (!getUser(config)) {\n      return [403];\n    }\n\n    const failed = !!Math.round(Math.random());\n\n    if (failed) {\n      return [500];\n    }\n\n    return [200, services];\n  });\n\n  mock.onGet(pathToRegexp(apiRoutes.getInsurance)).reply((config) => {\n    if (!getUser(config)) {\n      return [403];\n    }\n\n    const result = match<{ id: string }>(apiRoutes.getInsurance, {\n      decode: decodeURIComponent,\n    })(config.url!);\n\n    if (result === false) {\n      return [403];\n    }\n\n    const { id } = result.params;\n\n    if (+id === 1) {\n      return [\n        200,\n        {\n          allCovered: true,\n        } as InsuranceDetailsInterface,\n      ];\n    }\n\n    return [\n      200,\n      {\n        allCovered: false,\n      } as InsuranceDetailsInterface,\n    ];\n  });\n\n  mock.onGet(pathToRegexp(apiRoutes.getCarDetail)).reply((config) => {\n    if (!getUser(config)) {\n      return [403];\n    }\n\n    const result = match<{ id: string }>(apiRoutes.getCarDetail, {\n      decode: decodeURIComponent,\n    })(config.url!);\n\n    if (result === false) {\n      return [403];\n    }\n\n    const { id } = result.params;\n\n    return [200, carDetailsMock.find((item) => item.id === +id)];\n  });\n\n  mock.onGet(pathToRegexp(apiRoutes.job)).reply((config) => {\n    if (!getUser(config)) {\n      return [403];\n    }\n\n    const result = match<{ id: string }>(apiRoutes.job, {\n      decode: decodeURIComponent,\n    })(config.url!);\n\n    if (result === false) {\n      return [403];\n    }\n\n    return [200, jobsMocks];\n  });\n\n  mock.onPost(pathToRegexp(apiRoutes.job)).reply((config) => {\n    const user = getUser(config);\n\n    if (!user) {\n      return [403];\n    }\n\n    const data = JSON.parse(config.data);\n\n    if (data.appointmentId === 2) {\n      return [400];\n    }\n\n    const body = {\n      ...data,\n      id: Math.floor(Math.random() * 10000000),\n    };\n    jobsMocks.push(body);\n\n    return [200, body];\n  });\n\n  mock.onDelete(pathToRegexp(apiRoutes.job)).reply((config) => {\n    const user = getUser(config);\n\n    if (!user) {\n      return [403];\n    }\n\n    const result = match<{ id: string }>(apiRoutes.job, {\n      decode: decodeURIComponent,\n    })(config.url!);\n\n    if (result === false) {\n      return [403];\n    }\n\n    const { id } = result.params;\n\n    const idx = jobsMocks.findIndex((item) => item.id === +id);\n\n    const [body] = jobsMocks.splice(idx, 1);\n\n    return [200, body];\n  });\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { initializeMockAdapter } from './utils/mockApi';\nimport { ToastContainer } from 'react-toastify';\n\ninitializeMockAdapter();\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <QueryClientProvider client={queryClient}>\n        <App />\n        <ToastContainer />\n      </QueryClientProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}